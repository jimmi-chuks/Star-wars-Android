buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
repositories {
    maven { url 'https://maven.fabric.io/public' }
}
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'io.fabric'
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.dani_chuks.andeladeveloper.starwars"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "version"
    productFlavors {
        staging {
            dimension "version"
        }
        production {
            dimension "version"
        }
    }

    signingConfigs {
        debug {
            storeFile rootProject.file("app/debug_keystore")
            storePassword "starwars"
            keyAlias "starwars"
            keyPassword "starwars"
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file("app/starwars_keystore")
            storePassword keystoreProperties['storePassword']
        }
    }



    buildTypes {
        debug {
            minifyEnabled false
//            Gradle crashlytics release config
//            ext.betaDistributionReleaseNotes = releaseNotes
//            ext.betaDistributionGroupAliases = keystoreProperties['group']
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
//            Gradle crashlytics release config
//            ext.betaDistributionReleaseNotes = releaseNotes
//            ext.betaDistributionGroupAliases = keystoreProperties['group']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        compileOptions {
            targetCompatibility 1.8
            sourceCompatibility 1.8
        }
    }

    dependencies {

        def lifecycle_version = "1.1.1"
        def room_version = "1.1.1" // "1.1.0"
        def paging_version = "1.0.1"
        def nav_version = "1.0.0-alpha05"
        def work_version = "1.0.0-alpha07"
        def support_lib_version = "28.0.0"
        def rx_java_paging_version = "1.0.1"
        def constraint_layout = "2.0.0-alpha2"
        def retrofit = "2.4.0"

        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'com.android.support.constraint:constraint-layout:1.1.3'
        androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        implementation 'com.android.support:support-v4:28.0.0'
        implementation "com.android.support:appcompat-v7:$support_lib_version"
        implementation "com.android.support:animated-vector-drawable:28.0.0"
        implementation "com.android.support:support-media-compat:28.0.0"
        implementation "com.android.support:recyclerview-v7:$support_lib_version"
        implementation "com.android.support.constraint:constraint-layout:$constraint_layout"
        implementation "com.android.support:cardview-v7:$support_lib_version"
        implementation "com.android.support:design:$support_lib_version"
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'

//    fabric
        implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
            transitive = true;
        }
        // ViewModel and LiveData
        implementation "android.arch.lifecycle:extensions:$lifecycle_version"
        annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
//    // optional - ReactiveStreams support for LiveData
//    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"
        implementation "android.arch.persistence.room:runtime:$room_version"
        annotationProcessor "android.arch.persistence.room:compiler:$room_version"
        // optional - RxJava support for Room
        implementation "android.arch.persistence.room:rxjava2:$room_version"
        implementation "android.arch.paging:runtime:$paging_version"
        // alternatively - without Android dependencies for testing
        testImplementation "android.arch.paging:common:$paging_version"
        // optional - RxJava support, currently in release candidate
        implementation "android.arch.paging:rxjava2:$rx_java_paging_version"
        implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
        implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin
        implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin
        // optional - Firebase JobDispatcher support
        implementation "android.arch.work:work-firebase:$work_version"

        // optional - Test helpers
        testImplementation "android.arch.core:core-testing:$lifecycle_version"
        testImplementation "android.arch.persistence.room:testing:$room_version"
        androidTestImplementation "android.arch.navigation:navigation-testing:$nav_version"
        androidTestImplementation "android.arch.work:work-testing:$work_version"

        implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
        implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

        // retrofit
        implementation "com.squareup.retrofit2:retrofit:$retrofit"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
        implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
        implementation 'com.squareup.picasso:picasso:2.5.2'

        // dependency injection
        implementation "com.google.dagger:dagger:2.14.1"
        annotationProcessor "com.google.dagger:dagger-compiler:2.14.1"
        annotationProcessor "com.google.dagger:dagger-android-processor:2.14.1"
        implementation "com.google.dagger:dagger-android-support:2.14.1"
        compileOnly 'javax.annotation:jsr250-api:1.0'

        implementation 'javax.inject:javax.inject:1'

        implementation 'com.jakewharton:butterknife:8.8.1'
        annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    }
}
dependencies {
}