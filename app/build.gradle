buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'io.fabric'
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "com.dani_chuks.andeladeveloper.starwars"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "version"
    productFlavors {
        staging {
            dimension "version"
        }
        production {
            dimension "version"
        }
    }

    signingConfigs {
        debug {
            storeFile rootProject.file("app/debug_keystore")
            storePassword "starwars"
            keyAlias "starwars"
            keyPassword "starwars"
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file("app/starwars_keystore")
            storePassword keystoreProperties['storePassword']
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
//            Gradle crashlytics release config
//            ext.betaDistributionReleaseNotes = releaseNotes
//            ext.betaDistributionGroupAliases = keystoreProperties['group']
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
//            Gradle crashlytics release config
//            ext.betaDistributionReleaseNotes = releaseNotes
//            ext.betaDistributionGroupAliases = keystoreProperties['group']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        compileOptions {
            targetCompatibility 1.8
            sourceCompatibility 1.8
        }

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }
    }

    dependencies {

        def lifecycle_version = '2.2.0'
        def room_version = '2.2.5'
        def constraint_layout = "1.1.3"
        def recycler_view = "1.2.0-alpha02"
        def material = "1.2.0-alpha05"
        def retrofit = "2.6.1"
        def app_compat = "1.2.0-beta01"
        def dagger = "2.24"
        def core_ktx = "1.3.0-beta01"


        implementation fileTree(dir: 'libs', include: ['*.jar'])
        androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        implementation "androidx.recyclerview:recyclerview:$recycler_view"
        implementation "com.google.android.material:material:$material"
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test:rules:1.2.0'
        // Optional -- Hamcrest library
        androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
        // Optional -- UI testing with Espresso
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        // Optional -- UI testing with UI Automator
        androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

        implementation "androidx.appcompat:appcompat:$app_compat"
        implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
        implementation 'androidx.legacy:legacy-support-v4:1.0.0'
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
        implementation 'androidx.media:media:1.1.0'
        implementation 'androidx.cardview:cardview:1.0.0'

//    fabric
        implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
            transitive = true
        }

        // ViewModel and LiveData
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

        // Room
        implementation "androidx.room:room-runtime:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
        testImplementation "androidx.room:room-testing:$room_version"

        // ViewPager2
        implementation 'androidx.viewpager2:viewpager2:1.0.0'

        // Kotlin Extensions and Coroutines support for Room
        implementation "androidx.room:room-ktx:$room_version"

        // Test helpers
        testImplementation "androidx.room:room-testing:$room_version"

        // optional - Test helpers
        testImplementation 'androidx.arch.core:core-testing:2.1.0'

        // retrofit
        implementation "com.squareup.retrofit2:retrofit:$retrofit"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit"
        implementation "com.squareup.okhttp3:logging-interceptor:4.0.0"
        implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
        implementation 'com.squareup.picasso:picasso:2.5.2'

        // dependency injection
        implementation "com.google.dagger:dagger-android:$dagger"
        implementation "com.google.dagger:dagger-android-support:$dagger"
        kapt "com.google.dagger:dagger-compiler:$dagger"
        kapt "com.google.dagger:dagger-android-processor:$dagger"
        compileOnly 'javax.annotation:jsr250-api:1.0'
        implementation 'javax.inject:javax.inject:1'

        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // Android KTX
        implementation "androidx.core:core-ktx:$core_ktx"

    }
}
