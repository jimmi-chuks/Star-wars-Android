defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-27-alpha

decrypt_secrets: &decrypt_secrets
  run:
    name: Decrypt secrets
    command: echo $KEYSTORE | base64 -d | tee ~/code/app/starwars_keystore

clean_secrets: &clean_secrets
  run:
    name: Cleanup secrets
    command: rm -f ~/code/app/starwars_keystore

version: 2
jobs:
  #  build and test jobs go here
  build-job:
      <<: *defaults
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - <<: *decrypt_secrets
        - run:
            name: Download Dependencies
            command: ./gradlew androidDependencies
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - run:
            name: Run Tests
            command: ./gradlew lint test
        - store_test_results:
            path: app/build/test-results
            destination: test-results/
        - run:
            name: Initial build
            command: ./gradlew clean assembleRelease --no-daemon --stacktrace
        - store_artifacts:
            path: app/build/outputs/apk/
            destination: apks/
        - <<: *clean_secrets

  deploy-fastlane-job:
        <<: *defaults
        steps:
          - checkout
          - restore_cache:
              keys:
              - v1-gems-{{ checksum "Gemfile.lock" }}
              - v1-gems-
          - <<: *decrypt_secrets
          - run:
              name: Bundle install
              command: bundle install
              environment:
                BUNDLE_PATH: vendor/bundle

          - save_cache:
              key: v1-gems-{{ checksum "Gemfile.lock" }}
              paths:
                - vendor/bundle
          - run:
              name: "Install fastlane"
              command: bundle install
          - run:
              name: "Update fastlane"
              command: bundle update fastlane
          - run:
              name: "Deploy to Fabric"
              command: bundle exec fastlane beta_staging_release

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-fastlane-job:
          requires:
            - build-job
          filters:
            branches:
              only:
                - develop
                - master
